name: Bump and tag and pub a bin

on:
  push:
    branches:
      - master
      - cicd

jobs:
  bump-and-tag:
    environment: release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 18.x

      - name: Install Node dependencies
        run: npm install @semantic-release/changelog @semantic-release/exec

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        # run: npx semantic-release --branches master
        run: npx semantic-release --branches cicd

      - name: Run bump_update.sh ${{ env.VERSION }}
        if: ${{ env.VERSION }} != ""
        run: |
          cd Support
          chmod +x bump_update.sh
          ./bump_update.sh ${{ env.VERSION }}

      - name: Commit changes
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git add .
          git commit -m "ci: auto-bumped the ${{ env.VERSION }} update file"
          git push

  publish:
    environment: release
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Gets latest created release info
        id: latest_release_info
        uses: jossef/action-latest-release-info@v1.2.1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Print release info
        run: echo ${{ steps.latest_release_info.outputs.html_url }}

      - name: Setup .Net
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "7.0.x"

      - name: Run publish with version ${{ steps.latest_release_info.outputs.tag_name }}
        run: dotnet publish ./FPVNoiseDetector/FPVNoiseDetector.csproj /p:AssemblyVersion=${{ steps.latest_release_info.outputs.tag_name }} /p:UseAppHost=true --output .out_win --runtime win-x64 --self-contained false --verbosity quiet /p:PublishSingleFile=true --configuration Release --framework net7.0-windows

      - name: ZIP full app
        run: |
          $files = ".out_win/fpvnoise.exe", ".out_win/NoisePredictorModel.zip", ".out_win/tensorflow.dll", ".out_win/LICENSE.txt"
          Compress-Archive -Path $files -DestinationPath "fpvnoise-${{ steps.latest_release_info.outputs.tag_name }}.zip"

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.latest_release_info.outputs.upload_url }}
          asset_path: ./fpvnoise-${{ steps.latest_release_info.outputs.tag_name }}.zip
          asset_name: fpvnoise-${{ steps.latest_release_info.outputs.tag_name }}.zip
          asset_content_type: application/zip
